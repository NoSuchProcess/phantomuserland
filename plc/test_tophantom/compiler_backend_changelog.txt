ru.dz.phantom.code.Fileops
    add method:
        public static byte[] get_bytes(RandomAccessFile is, int length) throws IOException;

ru.dz.plc.compiler.PhantomVariable
    add method:
        public void setType(PhantomType type);

ru.dz.plc.compiler.ClassTable
    add lines (to fix NullPointerException)
        157 if (c.getReferencedClasses() != null) {
        162 }


ru.dz.jpc.tophantom.NodeEmitter
    add methods
        public int getCurrentStackSize()'
        public Node getLastOutNodeByIndex(int index);


-------------

Node subclasses:

ru.dz.jpc.tophantom.node.binode.OpAssignTransNode extends OpAssignNode
    rewrite metod:
        protected void generate_my_code(Codegen c, CodeGeneratorState s) throws IOException, PlcException;

ru.dz.jpc.tophantom.node.IdentTransNode extends IdentNode
    add method:
        public void setType(PhantomType ptype);

ru.dz.jpc.tophantom.node.binode.SequenceTransNode extends SequenceNode
    rewrite method (rewrite generation right child node):
        public void generate_code(Codegen c, CodeGeneratorState s) throws IOException, PlcException;



ru.dz.jpc.tophantom.node.binode.OpPlusTransNode
    rewrite method (calculate node type if child is .internal.object):
        public void find_out_my_type() throws PlcException;

ru.dz.jpc.tophantom.node.binode.ValEqTransNode
    rewrite method (calculate node type if child is .internal.object):
        public void find_out_my_type() throws PlcException;

ru.dz.jpc.tophantom.node.binode.ValNeqTransNode
    rewrite method (calculate node type if child is .internal.object):
        public void find_out_my_type() throws PlcException;

ru.dz.jpc.tophantom.node.binode.ValGeTransNode
    rewrite method (calculate node type if child is .internal.object):
        public void find_out_my_type() throws PlcException;

ru.dz.jpc.tophantom.node.binode.ValGtTransNode
    rewrite method (calculate node type if child is .internal.object):
        public void find_out_my_type() throws PlcException;

ru.dz.jpc.tophantom.node.binode.ValLeTransNode
    rewrite method (calculate node type if child is .internal.object):
        public void find_out_my_type() throws PlcException;

ru.dz.jpc.tophantom.node.binode.ValLtTransNode
    rewrite method (calculate node type if child is .internal.object):
        public void find_out_my_type() throws PlcException;


2010.11.09
ru.dz.plc.compiler.binode.BiNode
  changed method (calculate node type by left and right subnode types, JumpTargetNode has unknown type)
    public void find_out_my_type() throws PlcException;
      //todo hack, need to remove and refactor [
      else if( l_type != null &&  r_type instanceof PhTypeUnknown ) type = l_type;
      //todo ]

2011.04.12
ru.dz.plc.compiler.PhantomType
  add method
    public void set_is_container(boolean is_container) {
        this._is_container = is_container;
    }
